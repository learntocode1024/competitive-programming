#include <vector>
int getrow(int id);
int getcol(int id);
void setmatrixnum(int id, int x, int y, int n, int f = -1);
void setmatrixnum1(int id, int x, int y, int n, int f = -1);
void setmatrix(int id, int n, int m, int f = -1);
void setmatrix1(int id, int n, int m, int f = -1);
void copymatrix(int dst, int x, int y, int id, int r1, int r2, int c1, int c2, int f = -1);
void copymatrix1(int dst, int x, int y, int id, int r1, int r2, int c1, int c2, int f = -1);
void addscalar(int a, int s, int c, int f = -1);
void addscalar1(int a, int s, int c, int f = -1);
void mulscalar(int a, int s, int c, int f = -1);
void mulscalar1(int a, int s, int c, int f = -1);
void transpose(int a, int b, int f = -1);
void addmatrix(int a, int b, int c, int f = -1);
void submatrix(int a, int b, int c, int f = -1);
void mulmatrix(int a, int b, int c, int f = -1);
void setnummatrix(int n, int id, int x, int y, int f = -1);
void setnummatrix1(int n, int id, int x, int y, int f = -1);
void setnum(int id, int n, int f = -1);
void setnum1(int id, int n, int f = -1);
void addnum(int a, int b, int c, int f = -1);
void subnum(int a, int b, int c, int f = -1);
void mulnum(int a, int b, int c, int f = -1);
void divnum(int a, int b, int c, int f = -1);
void lssnum(int a, int b, int c, int f = -1);
void equnum(int a, int b, int c, int f = -1);
void LU_decomposition(int a, int L, int U, int f = -1);
void inverse(int a, int b, int f = -1);

int square_mul_normal();
int upper_inverse();
std::vector<int> LUP_decomposition();
int det();
int LU_to_mul();
int inverse_to_mul();
int shortest_path();
bool mateq(int a, int b);
void set_cost(int x);